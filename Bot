local creepEnabled = false

game:GetService("RunService").RenderStepped:Connect(function()
    if creepEnabled then
        spawn(function()
            local tool = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") then
                tool:Activate()
                local players = game.Players:GetPlayers()
                for i = 2, #players do 
                    local playerCharacter = players[i].Character
                    if playerCharacter and playerCharacter:FindFirstChild("Humanoid") and playerCharacter.Humanoid.Health > 0 and playerCharacter:FindFirstChild("HumanoidRootPart") and 
                        game.Players.LocalPlayer:DistanceFromCharacter(playerCharacter.HumanoidRootPart.Position) <= 15 then
                        for _, part in ipairs(playerCharacter:GetDescendants()) do
                            if part:IsA("BasePart") then
                                firetouchinterest(tool.Handle, part, 0)
                                firetouchinterest(tool.Handle, part, 1)
end
end
end
end
end
end)
end
end)
local localPlayer = game:GetService("Players").LocalPlayer
local currentCamera = game:GetService("Workspace").CurrentCamera
local mouse = localPlayer:GetMouse()

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for i, v in pairs(game:GetService("Players"):GetPlayers()) do
        if v.Name ~= localPlayer.Name then
            if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Head") then
                if v.Character:FindFirstChildOfClass("ForceField") then
                    else


local character = v.Character
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local raycastParams = RaycastParams.new()
raycastParams.FilterDescendantsInstances = {character}

local raycastResult = workspace:Raycast(humanoidRootPart.Position, Vector3.new(0, -100000, 0), raycastParams)
local hitPart = raycastResult and raycastResult.Instance

if hitPart then
  -- Handle the hit part
end



                local magnitude = (v.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).magnitude

                if magnitude < shortestDistance then
                    closestPlayer = v
                    shortestDistance = magnitude
                end
              end         
		end
        end
    end
end
    return closestPlayer
end

local stateType = Enum.HumanoidStateType

local character = game.Players.LocalPlayer.Character
local humanoid = character:WaitForChild("Humanoid")

humanoid:SetStateEnabled(stateType.FallingDown, false)
humanoid:SetStateEnabled(stateType.Ragdoll, false)

while true do
    wait()
    spawn(function()
spawn(function()
			
if executed  then 
    else
    getgenv().executed = true
spawn(function()

getgenv().creepEnabled = false
	getgenv().ssss = game.Players.LocalPlayer:GetMouse()

ssss.KeyDown:connect(function(key)
if key == "x" then
if i_said_right_foot_creep == false then
    getgenv().creepEnabled = true
    game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass('Humanoid').AutoRotate  = false
   else
       
        getgenv().creepEnabled = false
    game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass('Humanoid').AutoRotate  = true
    
end
end
end)

end)
end
end)
local nigger = getClosestPlayer()
			if game:GetService("Players").LocalPlayer.Character.PrimaryPart  and getClosestPlayer() ~= nil and 
creepEnabled == true then

local TargetPart = getClosestPlayer().Character.HumanoidRootPart
local Part = game.Players.LocalPlayer.Character.HumanoidRootPart
local RotateX, RotateY, RotateZ = 0, 0, 0

Part.CFrame = CFrame.new(Part.Position, TargetPart.Position) * CFrame.Angles(math.rad(0), math.rad(25), math.rad(0))

			game:GetService("Players").LocalPlayer.Character.Humanoid:MoveTo(getClosestPlayer().Character.HumanoidRootPart.CFrame * Vector3.new(-3, 0, 0))
if getClosestPlayer().Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end
               



		end
    
    end)
end
   local stateType = Enum.HumanoidStateType

local character = game.Players.LocalPlayer.Character
local humanoid = character:WaitForChild("Humanoid")

humanoid:SetStateEnabled(stateType.FallingDown, false)
humanoid:SetStateEnabled(stateType.Ragdoll, false)
